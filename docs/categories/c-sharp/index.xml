<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C Sharp on Hugo Roca | Proyectos - Web</title>
    <link>http://example.com/categories/c-sharp/</link>
    <description>Recent content in C Sharp on Hugo Roca | Proyectos - Web</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-PE</language>
    <lastBuildDate>Sat, 01 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.com/categories/c-sharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>APP Restaurante</title>
      <link>http://example.com/blog/2018-09-01-app-restaurante/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/blog/2018-09-01-app-restaurante/</guid>
      <description>En estas oportunidad les presento un nuevo sistema de restaurante, cuenta con dos formas de ver, una para los pedidos que se configura dentro del sistema y la otra la parte administrativa.
Contenido  Registro del menú del día Registro de empleados Control de acceso de usuario Cobranza Genera PDF del Cobro Registro de imagenes Vista rápida en dashboard  Paso 1 Puedes obtener el codigo fuente de la siguiente forma:</description>
    </item>
    
    <item>
      <title>Registro de errores con Log4Net</title>
      <link>http://example.com/blog/2018-05-20-registro-de-errores-con-log4net/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/blog/2018-05-20-registro-de-errores-con-log4net/</guid>
      <description>Si eres un gran desarrollador sabrás que todo software debe de tener un LOG, en esta oportunidad te muestro un aplicativo de como se hace uno.
Paso 1 Crear un proyecto de consola en visual studio
Paso 2 Agregar el siguiente paguete nuget: Paso 3 Agregar una clase a la cual llamaremos LogHelper.cs
namespace Log4Net { public class LogHelper { public static log4net.ILog GetLogger([CallerFilePath]string filename = &amp;quot;&amp;quot;) { return log4net.</description>
    </item>
    
    <item>
      <title>Entity Framework Básico</title>
      <link>http://example.com/blog/2018-05-06-entity-framework-b%C3%A1sico/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/blog/2018-05-06-entity-framework-b%C3%A1sico/</guid>
      <description>Una forma mas rápida de realizar CRUD&amp;rsquo;s, a tan solo unos clicks. Este es el poderosisimo Entity Framework
Paso 1 Puedes obtener el codigo fuente de la siguiente forma:
 Clonar ENTITY-FRAMEWORK-BASICO Abrir la solución y explorar el código fuente  Paso 2 Ejecutar lo siguiente en SQLServer
CREATE DATABASE Test GO USE Test GO CREATE TABLE [dbo].[Alumno]( [id] [int] IDENTITY(1,1) NOT NULL, [Nombre] [varchar](50) NOT NULL, [Apellido] [varchar](100) NOT NULL, [Sexo] [int] NOT NULL, [FechaNacimiento] [varchar](10) NOT NULL primary key (id)) GO  Paso 3 Una vez ejecutado el script, abrir el archivo App.</description>
    </item>
    
    <item>
      <title>Portafolio Profesional</title>
      <link>http://example.com/blog/2018-04-15-portafolio-profesional/</link>
      <pubDate>Sun, 15 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/blog/2018-04-15-portafolio-profesional/</guid>
      <description>¿Alguna véz haz querido hacer un curriculum profesional usando algo diferente? En esta ocación te traigo el siguiente sistema.
Sistema de administración de portafolio desarrollado en C#, MVC5, Entity Framework, JQuery, Bootstrap. Esta formado en dos partes:
 Lo que se muestra al usuario final (Front) Parte administrable  Edición de datos Registro y edición de estudios Registro y eliminación de hablidades Registro y edición de experiencia Edición de testimonios   Paso 1 Debes de tener instalado visual studio y sqlsever.</description>
    </item>
    
  </channel>
</rss>